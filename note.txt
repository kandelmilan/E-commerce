event bubbling 

group in tailwind

grid

url and uri urn 

tankstack query 


cloudfare tunnel 


          //    {/*<div key={i} className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-4">
          //   <div className="flex  bg-[#F7F7F7] ">
          //   <div className="h-[266px] w-[370px]  my-3 cursor-pointer hover:scale-[1.05] ">
          //     <img src={el.img} alt="" className="h-[200px] aspect-square object-fit" />
          //     <h1>{el.name}</h1>
          //   </div>
          //   <div className="h-[266px] w-[370px]  my-3 cursor-pointer hover:scale-[1.05] ">
          //     <img src={el.img} alt="" className="h-[200px] aspect-square object-fit" />
          //     <h1>{el.name}</h1>
          //   </div>
          //   <div className="h-[266px] w-[370px]  my-3 cursor-pointer hover:scale-[1.05] ">
          //     <img src={el.img} alt="" className="h-[200px] aspect-square object-fit" />
          //     <h1>{el.name}</h1>
          //   </div>
          //   <div className="h-[266px] w-[370px]  my-3 cursor-pointer hover:scale-[1.05] ">
          //     <img src={el.img} alt="" className="h-[200px] aspect-square object-fit" />
          //     <h1>{el.name}</h1>
          //   </div>
          //   </div>
          // </div> */}



          // import { createSlice } from '@reduxjs/toolkit';

// const cartSlice = createSlice({
//   name: 'cart',
//   initialState: {
//     items: [], // cart items
//   },
//   reducers: {
//     addToCart: (state, action) => {
//       const item = action.payload;
//       const existing = state.items.find((i) => i.id === item.id);
//       if (existing) {
//         existing.quantity += 1; // if item exists, increase quantity
//       } else {
//         state.items.push({ ...item, quantity: 1 });
//       }
//     },
//     removeFromCart: (state, action) => {
//       state.items = state.items.filter((i) => i.id !== action.payload);
//     },
//   },
// });